describe('ConstructorBuilder Component', () => {

    before(() => {
        cy.login('test1', '123'); // Perform login with valid credentials
    });

  beforeEach(() => {
      // Visit the page with the ConstructorBuilder component
      cy.visit('/ConstructorBuilder'); // Adjust this to the correct path
  });

  it('should add nodes and edges and generate the correct text', () => {
      // Simulate adding nodes
      cy.window().then((win) => {
          // Use the global React instance to add nodes
          win.addNode({
              id: 'node_fsxeln3qv',
              data: {
                  label: 'Type Constructor',
                  inputType: 'TypeConstructor',
                  picture: 'TypeConstructor',
                  itemLabel: 'test',
                  conID: 5,
                  itemID: '',
                  roleID: null
              },
              type: 'TypeConstructor',
              position: { x: 84.37, y: 30.40 },
              width: 133,
              height: 121
          });

          win.addNode({
              id: 'node_6u78vmrbg',
              data: {
                  label: 'Object',
                  inputType: 'Object',
                  picture: 'Object',
                  itemLabel: 'parent',
                  conID: 5,
                  itemID: 'Q7566',
                  roleID: null
              },
              type: 'Object',
              position: { x: 317.09, y: 55.99 },
              width: 163,
              height: 71
          });

          win.addEdge({
              source: 'node_fsxeln3qv',
              sourceHandle: 'source-right',
              target: 'node_6u78vmrbg',
              targetHandle: 'target-left',
              type: 'InstanceConstructor_Connector',
              id: 'reactflow__edge-node_fsxeln3qvsource-right-node_6u78vmrbgtarget-left'
          });
      });

      // Optionally wait for any asynchronous updates
      cy.wait(1000); // Adjust wait time as needed

      // Check the text generated by TextGenerator component
      cy.get('.Textbox').should('contain', 'TypeConstructor:C5(<br/><br/><br/>)');
  });
});

Cypress.on('uncaught:exception', (err, runnable) => {
  // Returning false here prevents Cypress from failing the test
  return false;
});